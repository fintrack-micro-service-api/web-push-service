
spring:

  application:
    name: web-push-service
  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      bootstrap-servers: localhost:9092
    dead_letter_topic: notification-retry


  datasource:
    url: jdbc:postgresql://localhost:33007/mini_project_db
    username: my_user
    password: my_password
#    url: jdbc:postgresql://8.219.131.180:8765/fintrack
#    username: root
#    password: P@SSWORD666
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8443/auth/realms/Fintrack
          jwk-set-uri: http://localhost:8443/auth/realms/Fintrack/protocol/openid-connect/certs

#hibernate:
#  jdbc:
logging:
  level:
    com.levi.testhibernate: debug
#    batch_size: 1
server:
  port: 8084

vapid:
  public:
    key: BM8sBfpPla7o8yocv8HMuEWLbT7AurG20zciQfVLasrBTNPbdWW4G_6gyZdfqWkPVazJFIT3igimQRkdQZzo6fc
  private:
    key: mM6nPE2_ZTiibfkcd9YrwRzt0yk2yD88W5h-AH9iNns
  #vapid.subject=[mailto:your@email.com OR https://your-website.com]
  subject: http://localhost:4206/

kafka:

  group-id: notification-consumer
  auto-offset: earliest
  topics:
    data: web-notification-service
    schedule: web-service-schedule



springdoc:
  api-docs:
    path: /web-push-service/v3/api-docs #these urls will used to load the swagger ui of this service by the api gateway
  swagger-ui:
    path: /web-push-service/swagger-ui.html